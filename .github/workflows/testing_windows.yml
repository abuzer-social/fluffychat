name: Windows testing Workflow

on:
  push:
    branches:
      - main
      - redesign
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: release_workflow
  cancel-in-progress: true

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment variables
        run: cat .github/workflows/versions.env >> $GITHUB_ENV

      - name: Prepare Windows environment
        run: ./scripts/prepare-windows.ps1
        shell: pwsh

      - name: Build OLM library for Windows
        run: ./scripts/build-olm-windows.sh
        shell: bash

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: false

      - name: Get Flutter dependencies
        run: |
          flutter pub get
          flutter doctor -v

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Build Windows Release
        run: |
          flutter build windows --release --verbose
          echo "Build completed, checking directory structure:"
          dir build\windows\runner\Release

      - name: Upload Windows executable
        uses: actions/upload-artifact@v3
        with:
          name: fluffychat-windows-exe
          path: build\windows\runner\Release\fluffychat.exe

      - name: Create Archive for Release
        run: |
          $releaseDir = "build\windows\runner\Release"
          if (Test-Path $releaseDir) {
            Compress-Archive -Path "$releaseDir\*" -DestinationPath "fluffychat-windows.zip"
            echo "Archive created successfully"
          } else {
            echo "Error: Release directory not found"
            exit 1
          }
        shell: pwsh

      - name: Upload Windows Release as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: fluffychat-windows-${{ env.TAG }}
          path: fluffychat-windows.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          personal_token: ${{ secrets.PAGES_DEPLOY_TOKEN }}
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          personal_token: ${{ secrets.PAGES_DEPLOY_TOKEN }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fluffychat-windows.zip
          asset_name: fluffychat-windows-${{ env.TAG }}.zip
          asset_content_type: application/zip